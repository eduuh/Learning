/// Computer Stack Memory.
   /// fibonaci(4) method invocation

 const fibonaci = 4 => {
  if(4 <= 0 ) throw Error; // does not excute
  if(n === 1){ return 1} else{    // does not excute
    return n * fibonaci(n-1)     // 4 * fibonaci(3) > 4 * 6 > 24
  }
}

 const fibonaci = 3 => {
  if(3 <= 0 ) throw Error; // does not excute
  if(3 === 1){ return 1} else{    // does not excute
    return n * fibonaci(n-1)     // 3 * fibonaci(2) > 3*2 > 6
  }
}


 const fibonaci = 2 => {
  if(2 <= 0 ) throw Error; // does not excute
  if(2 === 1){ return 1} else{    // does not excute
    return n * fibonaci(n-1)     // 2 * fibonaci(1) > 2 * 1 > 2
  }
}


 const fibonaci = 1 => {
  if(1 <= 0 ) throw Error; // does not excute
  if(1 === 1){ return 1} else{    // excute return 1;
    return n * fibonaci(n-1)     // Does not excute
  }
}